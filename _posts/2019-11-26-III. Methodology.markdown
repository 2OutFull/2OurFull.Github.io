---
layout: post
title:  "III. Methodology"
date:   2019-11-26 18:15:08
categories: Lorem
comments: true
---


## 1. PlayerStats
한국과 관련있는 선수들의 스텟을 추출을 하기 위해 statsapi를 활용하였다. 
api를 활용해서 선수들의 스텟을 추출하기 위해 선수의 그룹유형과 id가 필요하였기 때문에 데이터를 뽑아 둘의 값을 지정하였다.
```{python}
class PlayerStats(APIView):
    permission_classes = [AllowAny]
    player_id = {
        "류현진": 547943,
        "오승환": 493200,
        "추신수": 425783,
        "강정호": 628356,
        "최지만": 596847,
    }
    default_group = {
        "류현진": "pitching",
        "오승환": "pitching",
        "추신수": "hitting",
        "강정호": "fielding",
        "최지만": "fielding",
    }
```
NUGU를 통해 값이 들어오면 available_picher_stats.json 파일을 활용하여 값을 api로 활용할 수 있게 변환시킨다. available_pitcher_stats으로 NUGU에서 들어온 한글발화값을 원하는 속성으로 바꾸게끔 한다.
```
(avilable_picher_stats.json)
{
  "출장횟수": "gamesPlayed",
  "땅볼아웃": "groundOuts",
  "플라이아웃": "airOuts",
  "득점": "runs",
  "2루타": "doubles",
  "3루타": "triples",
  "홈런": "homeRuns",
  "삼진아웃": "strikeOuts",
  "볼넷": "baseOnBalls",
  "고의사구": "intentionalWalks",
  "안타": "hits",
  "데드볼": "hitByPitch",
  "타율": "avg",
  "타수": "atBats",
  "출루율": "obp",
  "장타율": "slg",
  "OPS": "ops",
  "도루사": "caughtStealing",
  "도루": "stolenBases",
  "도루성공률": "stolenBasePercentage",
  "더블플레이": "groundIntoDoublePlay",
  "투구수": "numberOfPitches",
  "타석수": "plateAppearances",
  "총 루타수": "totalBases",
  "득점타": "rbi",
  "잔루": "leftOnBase",
  "희생번트": "sacBunts",
  "희생플라이": "sacFlies",
  "바빕": "babip",
  "땅볼아웃/뜬공아웃 비율": "groundOutsToAirouts",
  "홈런 타율": "atBatsPerHomeRun"
}
```
```{python}
def post(self, request):
    data = request.data["action"]
    last_url = request.get_full_path().split("/")[-1]
    if last_url == "pitcher-stat":
        position = "pitcher"
    else:
        position = "hitter"
    with open(f"configure_package/available_{position}_stats.json") as pitcher_json:
        available_pitcher_stats = json.load(pitcher_json)
    request_stat = data["parameters"][f"{position}_stat"]["value"]
    player = data["parameters"][position]["value"]
    player_stat = available_pitcher_stats[request_stat]
```
다음은 직접 api로 스텟을 직접 추출한다. statsapi에서 원하는 선수의 스텟을 뽑기 위해서는 `playerid`, `groupid`, `season`를 요구하기 때문에 각각 알맞는 value를 넣어준다.
```{python}
return_stat = statsapi.player_stat_data(
            self.player_id[player], self.default_group[player], "season"
        )["stats"][0]["stats"][player_stat]
```
이제 리턴값의 종류를 str인지 int인지 구별하여 적절한 대답을 할 수 있도록 구분한뒤,
선수이름,요구한 스텟,요구한 스텟의 결과값을 NUGU에 전송한다.
```{python}
 if type(return_stat) is str:
            return_stat = float(return_stat)
        else:
            return_stat = str(return_stat) + "회"

        response_builder = {
            "version": "2.0",
            "resultCode": "OK",
            "output": {
                "pitcher": player,
                "pitcher_stat": request_stat,
                "return_pitcher_stat": return_stat,
            },
        }
        return Response(response_builder)
```

## 2. NextGame

## 3. Scheduler

## 4. League_Scheduler
